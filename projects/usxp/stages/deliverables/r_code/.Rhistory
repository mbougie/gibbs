host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
# df_1 <- dbGetQuery(con, "SELECT name, group_name, count, acres, round(perc::numeric,1) as perc, color FROM counts_cdl.s9_ytc_fc_fnl6 WHERE perc > 1.5  and name != 'Grassland/Pasture' or (name = 'Durum Wheat' and color IS NOT NULL) ")
df <- dbGetQuery(con, "SELECT year::text as year, acres, color_ytc FROM misc.lookup_yxc, counts_yxc.s22_ytc30_2008to2017_mmu5 WHERE s22_ytc30_2008to2017_mmu5.value = lookup_yxc.year;")
format_mil<-function(x){x/1000000}
format_yo<-function(x){x*5}
# df$name <- factor(df$name, levels = df$name[order(df$perc)])
##this reorders the labels in the legend in chronological order
df$year <- with(df, reorder(year, -year))
print(df$year)
jColors <- df$color_ytc
print(jColors)
names(jColors) <- df$year
print(head(jColors))
## this is used to sort the bars by group name
# df2 <- aggregate(df$perc, by=list(group_name=df$group_name), FUN=sum)
# print(df2)
# total <- merge(df,df2,by="group_name")
# total$group_name <- with(total, reorder(group_name, -x))
# print(total)
#
# total2 <- total[!duplicated(total[,c('group_name','x')]),]
# print(total2)
ggplot(df, aes(x=year, y=acres, fill=year)) +
geom_bar(stat = "identity", width = 0.25)+
theme(aspect.ratio = 1/3,
legend.position="none",
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())+
labs(y="Acreage in Millions")+
coord_flip()+
geom_text(aes(label = paste0(year,"%")), position=position_dodge(width=0.5), hjust= -0.4, vjust= 0.3, size=3, fontface="bold.italic")+
scale_fill_manual(values = jColors)
# scale_y_continuous(labels=format_mil, expand = c(0, 0), limits = c(0, 3000000))
library(ggplot2)
library(scales)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(extrafont)
drv <- dbDriver("PostgreSQL")
font_import()
con <- dbConnect(drv, dbname = "usxp",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
# df_1 <- dbGetQuery(con, "SELECT name, group_name, count, acres, round(perc::numeric,1) as perc, color FROM counts_cdl.s9_ytc_fc_fnl6 WHERE perc > 1.5  and name != 'Grassland/Pasture' or (name = 'Durum Wheat' and color IS NOT NULL) ")
df <- dbGetQuery(con, "SELECT  b.group_name, b.name, sum(acres) as acres, sum(round(a.perc::numeric,1)) as perc, b.color FROM counts_cdl.s25_ytc30_2008to2017_mmu5_fc as a inner join misc.lookup_cdl as b using(value) GROUP BY b.group_name, b.name, b.color")
format_mil<-function(x){x/1000000}
format_yo<-function(x){x*5}
# df$name <- factor(df$name, levels = df$name[order(df$perc)])
##this reorders the labels in the legend in chronological order
df$name <- with(df, reorder(name, -acres))
print(df$name)
jColors <- df$color
print(jColors)
names(jColors) <- df$name
print(head(jColors))
## this is used to sort the bars by group name
df2 <- aggregate(df$perc, by=list(group_name=df$group_name), FUN=sum)
print(df2)
total <- merge(df,df2,by="group_name")
total$group_name <- with(total, reorder(group_name, -x))
print(total)
total2 <- total[!duplicated(total[,c('group_name','x')]),]
print(total2)
ggplot(total, aes(x=group_name, y=acres, fill=name)) +
geom_bar(stat = "identity", width = 0.25)+
theme(aspect.ratio = 1/3,
legend.position="none",
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())+
labs(y="Acreage in Millions")+
coord_flip()+
geom_text(aes(label = paste0(perc,"%"), label=(acres)), position=position_dodge(width=0.5), hjust= -0.4, vjust= 0.3, size=3, fontface="bold.italic") +
scale_fill_manual(values = jColors)+
scale_y_continuous(labels=format_mil, expand = c(0, 0), limits = c(0, 3000000))
library(ggplot2)
library(scales)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(extrafont)
drv <- dbDriver("PostgreSQL")
font_import()
con <- dbConnect(drv, dbname = "usxp",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
# df_1 <- dbGetQuery(con, "SELECT name, group_name, count, acres, round(perc::numeric,1) as perc, color FROM counts_cdl.s9_ytc_fc_fnl6 WHERE perc > 1.5  and name != 'Grassland/Pasture' or (name = 'Durum Wheat' and color IS NOT NULL) ")
df <- dbGetQuery(con, "SELECT  b.group_name, sum(acres) as acres, sum(round(a.perc::numeric,1)) as perc, b.color FROM counts_cdl.s25_ytc30_2008to2017_mmu5_fc as a inner join misc.lookup_cdl as b using(value) GROUP BY b.group_name, b.color")
format_mil<-function(x){x/1000000}
format_yo<-function(x){x*5}
# df$name <- factor(df$name, levels = df$name[order(df$perc)])
##this reorders the labels in the legend in chronological order
df$group_name <- with(df, reorder(group_name, -acres))
print(df$group_name)
jColors <- df$color
print(jColors)
group_name(jColors) <- df$group_name
print(head(jColors))
## this is used to sort the bars by group name
df2 <- aggregate(df$perc, by=list(group_name=df$group_name), FUN=sum)
print(df2)
total <- merge(df,df2,by="group_name")
total$group_name <- with(total, reorder(group_name, -x))
print(total)
total2 <- total[!duplicated(total[,c('group_name','x')]),]
print(total2)
ggplot(total, aes(x=group_name, y=acres, fill=group_name)) +
geom_bar(stat = "identity", width = 0.25)+
theme(aspect.ratio = 1/3,
legend.position="none",
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())+
labs(y="Acreage in Millions")+
coord_flip()+
geom_text(aes(label = paste0(perc,"%"), label=(acres)), position=position_dodge(width=0.5), hjust= -0.4, vjust= 0.3, size=3, fontface="bold.italic") +
scale_fill_manual(values = jColors)+
scale_y_continuous(labels=format_mil, expand = c(0, 0), limits = c(0, 3000000))
library(ggplot2)
library(scales)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(extrafont)
drv <- dbDriver("PostgreSQL")
font_import()
con <- dbConnect(drv, dbname = "usxp",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
# df_1 <- dbGetQuery(con, "SELECT name, group_name, count, acres, round(perc::numeric,1) as perc, color FROM counts_cdl.s9_ytc_fc_fnl6 WHERE perc > 1.5  and name != 'Grassland/Pasture' or (name = 'Durum Wheat' and color IS NOT NULL) ")
df <- dbGetQuery(con, "SELECT  b.group_name, b.name, sum(acres) as acres, sum(round(a.perc::numeric,1)) as perc, b.color FROM counts_cdl.s25_ytc30_2008to2017_mmu5_fc as a inner join misc.lookup_cdl as b using(value) GROUP BY b.group_name, b.name, b.color")
format_mil<-function(x){x/1000000}
format_yo<-function(x){x*5}
# df$name <- factor(df$name, levels = df$name[order(df$perc)])
##this reorders the labels in the legend in chronological order
df$name <- with(df, reorder(name, -acres))
print(df$name)
jColors <- df$color
print(jColors)
names(jColors) <- df$name
print(head(jColors))
## this is used to sort the bars by group name
df2 <- aggregate(df$perc, by=list(group_name=df$group_name), FUN=sum)
print(df2)
total <- merge(df,df2,by="group_name")
total$group_name <- with(total, reorder(group_name, -x))
print(total)
total2 <- total[!duplicated(total[,c('group_name','x')]),]
print(total2)
ggplot(total, aes(x=group_name, y=acres, fill=name)) +
geom_bar(stat = "identity", width = 0.25)+
theme(aspect.ratio = 1/3,
legend.position="none",
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())+
labs(y="Acreage in Millions")+
coord_flip()+
geom_text(aes(label = paste0(perc,"%"), label=(acres)), position=position_dodge(width=0.5), hjust= -0.4, vjust= 0.3, size=3, fontface="bold.italic") +
scale_fill_manual(values = jColors)+
scale_y_continuous(labels=format_mil, expand = c(0, 0), limits = c(0, 3000000))
library(plyr)      # for join(...)
library(rgdal)     # for readOGR(...)
library(ggplot2)   # for fortify(...)
# oregon <- readOGR(dsn="D:\\projects\\usxp\\current_deliverable\\5_23_18\\sf", layer="tryit_dissolved")
# PG <- readOGR(dsn="D:\\projects\\usxp\\current_deliverable\\5_23_18\\sf", layer="tryit_dissolved")
# AG <- fortify(PG)
# shp <- readOGR(dsn="D:\\projects\\usxp\\current_deliverable\\5_23_18\\sf", layer="tryit_dissolved")
# AG <- fortify(shp)
# map <- ggplot() + geom_polygon(data = shp, aes(x = lat, y = long, group = group), colour = "black", fill = NA)
# d = ggplot() +
#        geom_polygon(data=AG, aes( x=long, y=lat, group=group), fill = 'grey70', colour = 'grey50', size = 0.25) + facet_wrap(~shp$GRIDCODE)
#
#
#
#
# d
# # not tested...
# library(plyr)      # for join(...)
# library(rgdal)     # for readOGR(...)
# library(ggplot2)   # for fortify(...)
#
# mapa <- readOGR(dsn=".",layer="shapefile name w/o .shp extension")
# map@data$id <- rownames(mapa@data)
# mapa@data   <- join(mapa@data, data, by="CD_GEOCODI")
# mapa.df     <- fortify(mapa)
# mapa.df     <- join(mapa.df,mapa@data, by="id")
#
# ggplot(mapa.df, aes(x=long, y=lat, group=group))+
#   geom_polygon(aes(fill=Population))+
#   coord_fixed()
mapa <- readOGR(dsn="D:\\projects\\usxp\\current_deliverable\\5_23_18\\sf", layer="tryit_dissolved")
rownames(mapa@data)
mapa@data$id
mapa@data$id <- rownames(mapa@data)
mapa@data$id
mapa@data
# mapa@data   <- join(mapa@data, data, by="GRIDCODE")
mapa.df     <- fortify(mapa)
mapa.df     <- join(mapa.df,mapa@data, by="id")
# ggplot(mapa.df, aes(x=long, y=lat, group=group))+
#   geom_polygon(aes(fill=Population))+
#   coord_fixed()
ggplot() + geom_polygon(data=mapa.df, aes( x=long, y=lat, group=group), fill = 'grey70', colour = 'grey50', size = 0.25) + facet_wrap(~GRIDCODE)+
theme(plot.title = element_text(colour = "steelblue",  face = "bold", family = "Helvetica", hjust = 0.5),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.text.y = element_blank(),
axis.title.y=element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
legend.position="none")
library(rgdal)     # R wrapper around GDAL/OGR
library(ggplot2)   # for general plotting
# library(ggmaps)    # for fortifying shapefiles
# First read in the shapefile, using the path to the shapefile and the shapefile name minus the
# extension as arguments
# oregon <- readOGR(dsn="D:\\projects\\usxp\\current_deliverable\\5_23_18\\sf", layer="tryit_dissolved")
oregon <- readOGR(dsn="D:\\projects\\usxp\\current_deliverable\\5_23_18\\sf", layer="tryit_dissolved")
test_spdf <- as(test, "SpatialPixelsDataFrame")
test_df <- as.data.frame(test_spdf)
colnames(test_df) <- c("value", "x", "y")
#
# ggplot() +
#   geom_polygon(data=oregon, aes(x=long, y=lat, group=group),
#                fill=NA, color="grey70", size=0.5) +
#   ggtitle('Expansion of Cropland by Year') +
#   coord_equal() +
#   theme_map() +
#   theme(legend.position="none", plot.title = element_text(hjust = 0.1))
d = (ggplot() +
geom_polygon(data=test_df, aes(y=y, x=x), fill = 'grey70', colour = 'grey50', size = 0.25) + facet_wrap(~value)+ theme(strip.text.x = element_text(size = 8, colour = "steelblue", face = "bold.italic")) +
coord_map(project="polyconic") +
theme(plot.title = element_text(colour = "steelblue",  face = "bold", family = "Helvetica", hjust = 0.5),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.text.y = element_blank(),
axis.title.y=element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
legend.position="none"))
d + ggtitle("County CLU Datasets by Year")
library(raster)
library(rgdal)
# Load raster into R
df <- raster("C:\\Users\\Bougie\\Desktop\\temp\\agrigate_100.tif")
# View raster structure
## class       : RasterLayer
## dimensions  : 1367, 1697, 2319799  (nrow, ncol, ncell)
## resolution  : 1, 1  (x, y)
## extent      : 731453, 733150, 4712471, 4713838  (xmin, xmax, ymin, ymax)
## coord. ref. : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0
## data source : /Users/mjones01/Documents/data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif
## names       : HARV_dsmCrop
## values      : 305.07, 416.07  (min, max)
# plot raster
# note \n in the title forces a line break in the title
# s <- raster(nrow=10, ncol=10)
# r <- resample(df, s, method='bilinear')
#
#
# plot(df, main="NEON Digital Surface Model\nHarvard Forest")
library(ggplot2)
library(raster)
library(rasterVis)
library(rgdal)
library(grid)
library(scales)
library(viridis)  # better colors for everyone
library(ggthemes) # theme_map()
require("RPostgreSQL")
# library(plyr)
# library(dplyr)
# library(viridis)
# library(extrafont)
drv <- dbDriver("PostgreSQL")
# datafold <- "/path/to/oregon_masked_tmean_2013_12.tif"
# ORpath <- "/path/to/Oregon_10N.shp"
con <- dbConnect(drv, dbname = "usxp",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
# df_1 <- dbGetQuery(con, "SELECT name, group_name, count, acres, round(perc::numeric,1) as perc, color FROM counts_cdl.s9_ytc_fc_fnl6 WHERE perc > 1.5  and name != 'Grassland/Pasture' or (name = 'Durum Wheat' and color IS NOT NULL) ")
df <- dbGetQuery(con, "SELECT value::text as value, color_ytc FROM misc.lookup_yxc")
test <- raster("D:\\projects\\usxp\\current_deliverable\\5_23_18\\s22_ytc_bs100_rs.tif")
oregon <- readOGR(dsn="C:\\Users\\Bougie\\Desktop\\Gibbs\\data\\usxp\\ancillary\\vector\\sf", layer="states")
test_spdf <- as(test, "SpatialPixelsDataFrame")
test_df <- as.data.frame(test_spdf)
colnames(test_df) <- c("value", "x", "y")
jColors <- df$color
print(jColors)
names(jColors) <- df$value
print(head(jColors))
####note the as.factor() is very important for continoeus values using disctere color scales!!!!
ggplot() +
geom_tile(data=test_df, aes(x=x, y=y, fill=as.factor(value)), alpha=0.8) +
geom_polygon(data=oregon, aes(x=long, y=lat, group=group),
fill=NA, color="grey70", size=0.5) +
scale_fill_manual(values = jColors)+
ggtitle('Expansion of Cropland by Year') +
coord_equal() +
theme_map() +
theme(legend.position="none", plot.title = element_text(hjust = 0.1))
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "usxp",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
formatAC<-function(x){x/1000000}
####  s20   ##########################################################################################
# query the data from postgreSQL
# df <- dbGetQuery(con, "SELECT years,acres,series,yxc,series_order FROM series_counts.merged_series where yxc = 'ytc' and (series='s20' or series='s21')")
#####query the data from postgreSQL
# df <- dbGetQuery(con, "SELECT years,acres,series,yxc,series_order,series || ': ' || label_traj as label FROM series_counts.merged_series as a inner join series_meta.meta as b using(series)  where series = 's20' ")
#
# ##this reorders the labels in the legend in chronological order
# df$label <- with(df, reorder(label, series_order))
#
#
# ggplot(df, aes(x=years, y=acres, group=yxc, color=yxc)) +
#   # geom_line( linetype="dashed") +
#   geom_line(size=0.80, aes(linetype=yxc, color=yxc)) +
#   scale_linetype_manual(values=c("twodash", "solid"))+
#   # theme(legend.position="top")
#   scale_y_continuous(labels=formatAC) +
#   scale_x_continuous(breaks=c(2009,2010,2011,2012,2013,2014,2015,2016)) +
#   labs(y="Acreage in Millions",x="Years")+
#   ggtitle('Series 20 (cropland expansion(ytc) and cropland abandonment(yfc))') + theme(plot.title = element_text(hjust = 0.5)) +
#   theme(aspect.ratio=0.5, legend.title=element_blank(), legend.position = c(0.06, -0.26)) + ##this creates 1 to 1 aspect ratio so when export to pdf not stretched
#   scale_colour_manual(values = c("#984ea3", "#984ea3"))
#
#
####  s20 regression ##########################################################################################
#
# ####query the data from postgreSQL
# df <- dbGetQuery(con, "SELECT years,acres,series,yxc,series_order,series || ': ' || label_traj as label FROM series_counts.merged_series as a inner join series_meta.meta as b using(series)  where series = 's20' and yxc = 'ytc' ")
#
# ##this reorders the labels in the legend in chronological order
# df$label <- with(df, reorder(label, series_order))
#
#
# ggplot(df, aes(x=years, y=acres, x.plot,y.plot, group=yxc, color=yxc)) +
#   # geom_line( linetype="dashed") +
#   geom_line(size=0.80, aes(linetype=yxc, color=yxc)) +
#   scale_linetype_manual(values=c("solid"))+
#   # theme(legend.position="top")
#   scale_y_continuous(labels=formatAC) +
#   scale_x_continuous(breaks=c(2009,2010,2011,2012,2013,2014,2015,2016)) +
#   labs(y="Acreage in Millions",x="Years")+
#   ggtitle('Series 20 (Conversion to Crop with regression and CI)') + theme(plot.title = element_text(hjust = 0.5)) +
#   theme(aspect.ratio=0.5, legend.title=element_blank(), legend.position = c(0.06, -0.26)) + ##this creates 1 to 1 aspect ratio so when export to pdf not stretched
#   scale_colour_manual(values = c("#984ea3", "blue")) +
#   stat_summary(fun.data=mean_cl_normal) +
#   geom_smooth(method='lm',formula=y~x, size=0.0, linetype ="dashed")
####  s20 and 21   ##########################################################################################
# # query the data from postgreSQL
# df <- dbGetQuery(con, "SELECT years,acres,series,yxc,series_order,series || ': ' || label_traj as label FROM series_counts.merged_series as a inner join series_meta.meta as b using(series)  where yxc = 'ytc' and (series = 's21' or series = 's20' or series = 's21_seperate' )")
# print (df)
# ##this reorders the labels in the legend in chronological order
# df$label <- with(df, reorder(label, series_order))
#
#
# ggplot(df, aes(x=years, y=acres, group=series_order, color=label, ordered = TRUE)) +
#   geom_line(size=0.80) +
#   scale_y_continuous(labels=formatAC) +
#   scale_x_continuous(breaks=c(2009,2010,2011,2012,2013,2014,2015,2016)) +
#   labs(y="Acreage in Millions",x="Years")+
#   ggtitle('Series 20 and Series 21 (cropland expansion)') + theme(plot.title = element_text(hjust = 0.5)) +
#   theme(aspect.ratio=0.5, legend.title=element_blank(), legend.position = c(0.11, -0.26)) +  ##this creates 1 to 1 aspect ratio so when export to pdf not stretched
#   scale_colour_manual(values = c("#984ea3", "#ff7f00", "black"))
#
#
#
####  important series   ##########################################################################################
###query the data from postgreSQL
df <- dbGetQuery(con, "SELECT value,acres,series,yxc,year,name,color FROM cdl_counts.merged_series a INNER JOIN misc.lookup_cdl b using(value) WHERE value=1 or value=2 or value=4 or value=5 or value=23 or value=24 or value=36 or value=61")
##this reorders the labels in the legend in chronological order
df$name <- with(df, reorder(name, -acres))
jColors <- df$color
names(jColors) <- df$name
print(head(jColors))
ggplot(df, aes(x=year, y=acres, group=name, color=name, ordered = TRUE)) +
geom_line(size=0.80) +
scale_linetype_manual(values=c("dashed"))+
scale_y_continuous(labels=formatAC) +
scale_x_continuous(breaks=c(2009,2010,2011,2012,2013,2014,2015,2016)) +
labs(y="Acreage in Millions",x="Years")+
ggtitle('Selected First Croptypes') + theme(plot.title = element_text(hjust = 0.5)) +
theme(aspect.ratio=0.5, legend.title=element_blank(), legend.position = c(0.07, -0.35)) + ##this creates 1 to 1 aspect ratio so when export to pdf not stretched
scale_colour_manual(values = jColors)
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "intact_lands",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
##########################  using supplied county dataset######################################
state <- map_data("state")
##subset state dataset
state_ss <- subset(state, region=='montana' | region=='wyoming' | region == 'north dakota'| region=='south dakota' | region == 'minnesota' | region=='iowa' | region == 'nebraska')
##create counties dataset
cnty <- map_data("county")
##get the fips code
data(county.fips)
## attach fips code to counties dataset
cnty2 <- cnty %>%
mutate(polyname = paste(region,subregion,sep=",")) %>%
left_join(county.fips, by="polyname")
## query the data from postgreSQL
yo <- dbGetQuery(con, "SELECT * FROM public.testunion2;")
## merge cnty2 with yo
d = merge(cnty2, yo, sort = TRUE, by.x='fips', by.y='atlas_stco')
## If I don't reorder the order of lat long it "tears" the polygons!
cnty_fnl<-d[order(d$order),]
d = (ggplot() +
geom_polygon(data=cnty_fnl, aes(y=lat, x=long, group=group), fill = 'grey70', colour = 'grey50', size = 0.25) + facet_wrap(~year)+ theme(strip.text.x = element_text(size = 8, colour = "steelblue", face = "bold.italic")) +
geom_polygon(data=state_ss, aes(y=lat, x=long, group=group), fill = 'grey70', alpha=0, colour = 'white', size = 0.25)+
coord_map(project="polyconic") +
theme(plot.title = element_text(colour = "steelblue",  face = "bold", family = "Helvetica", hjust = 0.5),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.text.y = element_blank(),
axis.title.y=element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
legend.position="none"))
d + ggtitle("County CLU Datasets by Year")
####  important series   ##########################################################################################
###query the data from postgreSQL
df <- dbGetQuery(con, "SELECT value as year,acres,series,yxc,name,color FROM cdl_counts.merged_series a INNER JOIN misc.lookup_cdl b using(value) WHERE value=1 or value=2 or value=4 or value=5 or value=23 or value=24 or value=36 or value=61")
##this reorders the labels in the legend in chronological order
df$name <- with(df, reorder(name, -acres))
jColors <- df$color
names(jColors) <- df$name
print(head(jColors))
ggplot(df, aes(x=year, y=acres, group=name, color=name, ordered = TRUE)) +
geom_line(size=0.80) +
scale_linetype_manual(values=c("dashed"))+
scale_y_continuous(labels=formatAC) +
scale_x_continuous(breaks=c(2009,2010,2011,2012,2013,2014,2015,2016)) +
labs(y="Acreage in Millions",x="Years")+
ggtitle('Selected First Croptypes') + theme(plot.title = element_text(hjust = 0.5)) +
theme(aspect.ratio=0.5, legend.title=element_blank(), legend.position = c(0.07, -0.35)) + ##this creates 1 to 1 aspect ratio so when export to pdf not stretched
scale_colour_manual(values = jColors)
library(data.table)
library(maptools)#R package with useful map tools
library(rgeos)#Geomegry Engine Open Source (GEOS)
library(rgdal)#Geospatial Data Analysis Library (GDAL)
library(ggplot2)
library(extrafont)
library(RColorBrewer)
library(plotly)
library(dplyr)
library(geofacet)
library(rgdal)# R wrapper around GDAL/OGR
require("RPostgreSQL")
library(dplyr)
#Get rid of anything saved in your workspace
rm(list=ls())
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "usxp",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
df <- dbGetQuery(con, "SELECT label::integer,name,value,color, atlas_st, acres, year::integer, st_abbrev FROM counts_yxc.s20_ytc30_2008to2017_mmu5_fc_states a INNER JOIN misc.lookup_cdl b ON a.label::integer=b.value where color IS NOT NULL")
formatAC<-function(x){x/1000000}
##this reorders the labels in the legend in chronological order
df$name <- with(df, reorder(name, -acres))
jColors <- df$color
names(jColors) <- df$name
print(head(jColors))
yo <- ggplot(df, aes(x=year, y=acres, group=name, color=name, ordered = TRUE)) +
geom_line(size=0.50) +
facet_wrap(~ st_abbrev)+
scale_linetype_manual(values=c("dashed"))+
scale_y_continuous(labels=formatAC) +
scale_x_continuous(breaks=c(2009,2010,2011,2012,2013,2014,2015,2016)) +
labs(y="Acreage in Millions",x="Years")+
ggtitle('Selected First Croptypes') + theme(plot.title = element_text(hjust = 0.5)) +
theme(aspect.ratio=0.5,
legend.title=element_blank(),
legend.position = c(0.07, -0.35), ##this creates 1 to 1 aspect ratio so when export to pdf not stretched
axis.text.x = element_text(size=6,angle=90))+
scale_colour_manual(values = jColors)
pdf("C:\\Users\\Bougie\\Desktop\\Gibbs\\scripts\\projects\\usxp\\stages\\post\\cdl\\r_code\\plotResult_rate_yfc.pdf")
print(yo)
dev.off()
