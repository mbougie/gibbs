FUN=function(x)mean(range(x)))
d = ggplot() +
geom_polygon(data=state_fnl, aes(y=lat, x=long, group=group, fill = percent), colour = 'grey50', size = 0.25) +
scale_fill_continuous(name="percent", trans = "reverse") +
geom_polygon(data=state_ss, aes(y=lat, x=long, group=group), fill = 'grey70', alpha=0, colour = 'white', size = 0.9)+
### this is a hack to add the label to the center---add a new layer of centroids and label them
geom_point(colour='red',  fill = 'grey70', alpha=0) +
geom_text(data=cnames, aes(long, lat, label = percent), size=4, color='white') +
coord_map(project="polyconic") +
labs(
title = "Percent Potential Abandoned Land by State",
subtitle = "For cumulative year 2015"
) +
theme(
text = element_text(color = "#22211d"),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.text.y = element_blank(),
axis.title.y=element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 15, hjust=0.00, color = "#4e4d47", margin = margin(b = -0.1, t = 0.1, l = 0.01, unit = "cm")),
plot.subtitle = element_text(size= 10, hjust=0.00, color = "#4e4d47", margin = margin(b = -0.2, t = 0.20, l = 0.01, unit = "cm")),
legend.position = c(0.08, 0.05)
)
d + guides(fill = guide_colorbar(reverse = TRUE, barwidth = 7, barheight = 0.5, title.position = 'top')) + theme(legend.direction = "horizontal")
## If I don't reorder the order of lat long it "tears" the polygons!
cnty_fnl<-x[order(x$order),]
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "glbrc",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
##########################  using supplied county dataset######################################
state <- map_data("state")
##subset state dataset
state_ss <- subset(state, region=='montana' | region=='wyoming' | region == 'north dakota'| region=='south dakota' | region == 'minnesota' | region=='iowa' | region == 'nebraska')
##create counties dataset
cnty <- map_data("county")
##get the fips code
data(county.fips)
## attach fips code to counties dataset
cnty2 <- cnty %>%
mutate(polyname = paste(region,subregion,sep=",")) %>%
left_join(county.fips, by="polyname")
postgres_query <- dbGetQuery(con, "SELECT
main.atlas_stco,
counties.atlas_name,
sum(main.acres),
counties.acres_calc,
(sum(main.acres)/counties.acres_calc)*100 as percent
FROM
spatial.counties,
new.zonal_test as main
WHERE
main.atlas_stco = counties.atlas_stco
GROUP BY
main.atlas_stco,
counties.atlas_name,
counties.acres_calc")
## merge cnty2 with postgres_query
x = merge(cnty2, postgres_query, sort = TRUE, by.x='fips', by.y='atlas_stco')
## If I don't reorder the order of lat long it "tears" the polygons!
cnty_fnl<-x[order(x$order),]
d = ggplot() +
geom_polygon(data=cnty_fnl, aes(y=lat, x=long, group=group, fill = percent), colour = 'grey50', size = 0.25) +
scale_fill_continuous(name="percent", trans = "reverse") +
geom_polygon(data=state_ss, aes(y=lat, x=long, group=group), fill = 'grey70', alpha=0, colour = 'white', size = 0.9)+
coord_map(project="polyconic") +
labs(
title = "Percent Potential Abandoned Land by County",
subtitle = "For cumulative year 2015"
) +
theme(
text = element_text(color = "#22211d"),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.text.y = element_blank(),
axis.title.y=element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 15, hjust=0.00, color = "#4e4d47", margin = margin(b = -0.1, t = 0.1, l = 0.01, unit = "cm")),
plot.subtitle = element_text(size= 10, hjust=0.00, color = "#4e4d47", margin = margin(b = -0.2, t = 0.20, l = 0.01, unit = "cm")),
legend.position = c(0.08, 0.05)
)
d + guides(fill = guide_colorbar(reverse = TRUE, barwidth = 7, barheight = 0.5, title.position = 'top')) + theme(legend.direction = "horizontal")
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(scales)
library(rjson)
# library(jsonlite)
require(RColorBrewer)
library(glue)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "glbrc",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
formatAC<-function(x){x/100000}
##### query the data from postgreSQL
df <- dbGetQuery(con, "SELECT atlas_name, acres::integer as acres,(acres::integer)/100000 as acres_scale, landcover FROM new.zonal_test")
df <- ddply(df, .(atlas_name),transform, pos = cumsum(acres) - (0.5 * acres))
# ggplot(df, aes(fill=landcover, y=acres, x=atlas_name)) +
# ggplot(df, aes(fill=landcover, y=acres, x=reorder(atlas_name, -acres))) +
ggplot(df, aes(fill=factor(landcover, levels=c("other","disturbed","wetland","shrubland","forest","grassland")), y=acres, x=reorder(atlas_name, -acres))) +
geom_bar(stat="identity")+
scale_fill_manual(values = c("forest" = "#256e36", "shrubland" = "#9c140a", "wetland" = "#023c9f", "grassland" = "#a9d91a", "disturbed" = "black", "other"="purple")) +
geom_text(aes(label = acres_scale), position = position_stack(vjust = 0.5))+
# geom_text(aes(label=ifelse(percent >= 0.07, paste0(sprintf("%.0f", percent*100),"%"),"")),position=position_stack(vjust=0.5), colour="white") +
scale_y_continuous(
labels=formatAC,
"millions of acres",
sec.axis = sec_axis(~ . * 1.20, name = "", labels=formatAC)
)
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(scales)
library(rjson)
# library(jsonlite)
require(RColorBrewer)
library(glue)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "glbrc",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
formatAC<-function(x){x/100000}
##### query the data from postgreSQL
df <- dbGetQuery(con, "SELECT states.atlas_name, main.acres::integer as acres,(main.acres::integer)/100000 as acres_scale, label
FROM new.zonal_test as main join spatial.states on left(main.atlas_stco,2)=states.atlas_st")
df <- ddply(df, .(atlas_name),transform, pos = cumsum(acres) - (0.5 * acres))
# ggplot(df, aes(fill=landcover, y=acres, x=atlas_name)) +
# ggplot(df, aes(fill=landcover, y=acres, x=reorder(atlas_name, -acres))) +
ggplot(df, aes(fill=factor(landcover, levels=c("other","disturbed","wetland","shrubland","forest","grassland")), y=acres, x=reorder(atlas_name, -acres))) +
geom_bar(stat="identity")+
scale_fill_manual(values = c("forest" = "#256e36", "shrubland" = "#9c140a", "wetland" = "#023c9f", "grassland" = "#a9d91a", "disturbed" = "black", "other"="purple")) +
geom_text(aes(label = acres_scale), position = position_stack(vjust = 0.5))+
# geom_text(aes(label=ifelse(percent >= 0.07, paste0(sprintf("%.0f", percent*100),"%"),"")),position=position_stack(vjust=0.5), colour="white") +
scale_y_continuous(
labels=formatAC,
"millions of acres",
sec.axis = sec_axis(~ . * 1.20, name = "", labels=formatAC)
)
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(scales)
library(rjson)
# library(jsonlite)
require(RColorBrewer)
library(glue)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "glbrc",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
formatAC<-function(x){x/100000}
##### query the data from postgreSQL
df <- dbGetQuery(con, "SELECT states.atlas_name, main.acres::integer as acres,(main.acres::integer)/100000 as acres_scale, lookup.landcover
FROM new.zonal_test as main join spatial.states on left(main.atlas_stco,2)=states.atlas_st join new.lookup using(label)")
df <- ddply(df, .(atlas_name),transform, pos = cumsum(acres) - (0.5 * acres))
# ggplot(df, aes(fill=landcover, y=acres, x=atlas_name)) +
# ggplot(df, aes(fill=landcover, y=acres, x=reorder(atlas_name, -acres))) +
ggplot(df, aes(fill=factor(landcover, levels=c("other","disturbed","wetland","shrubland","forest","grassland")), y=acres, x=reorder(atlas_name, -acres))) +
geom_bar(stat="identity")+
scale_fill_manual(values = c("forest" = "#256e36", "shrubland" = "#9c140a", "wetland" = "#023c9f", "grassland" = "#a9d91a", "disturbed" = "black", "other"="purple")) +
geom_text(aes(label = acres_scale), position = position_stack(vjust = 0.5))+
# geom_text(aes(label=ifelse(percent >= 0.07, paste0(sprintf("%.0f", percent*100),"%"),"")),position=position_stack(vjust=0.5), colour="white") +
scale_y_continuous(
labels=formatAC,
"millions of acres",
sec.axis = sec_axis(~ . * 1.20, name = "", labels=formatAC)
)
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(scales)
library(rjson)
# library(jsonlite)
require(RColorBrewer)
library(glue)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "glbrc",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
formatAC<-function(x){x/100000}
##### query the data from postgreSQL
df <- dbGetQuery(con, "SELECT states.atlas_name, main.acres::integer as acres,(main.acres::integer)/100000 as acres_scale, lookup.landcover
FROM new.zonal_test as main join spatial.states on left(main.atlas_stco,2)=states.atlas_st join new.lookup using(label)")
df <- ddply(df, .(atlas_name),transform, pos = cumsum(acres) - (0.5 * acres))
# ggplot(df, aes(fill=landcover, y=acres, x=atlas_name)) +
# ggplot(df, aes(fill=landcover, y=acres, x=reorder(atlas_name, -acres))) +
ggplot(df, aes(fill=factor(landcover, levels=c("other","disturbed","wetland","shrubland","forest","grassland")), y=acres, x=reorder(atlas_name, -acres))) +
geom_bar(stat="identity")+
scale_fill_manual(values = c("forest" = "#256e36", "shrubland" = "#9c140a", "wetland" = "#023c9f", "grassland" = "#a9d91a", "disturbed" = "black", "other"="purple")) +
geom_text(aes(label = acres_scale), position = position_stack(vjust = 0.5))+
# geom_text(aes(label=ifelse(percent >= 0.07, paste0(sprintf("%.0f", percent*100),"%"),"")),position=position_stack(vjust=0.5), colour="white") +
scale_y_continuous(
labels=formatAC,
"millions of acres",
sec.axis = sec_axis(~ . * 1.20, name = "", labels=formatAC)
)
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(scales)
library(rjson)
# library(jsonlite)
require(RColorBrewer)
library(glue)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "glbrc",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
formatAC<-function(x){x/100000}
##### query the data from postgreSQL
df <- dbGetQuery(con, "SELECT states.atlas_name,
sum(main.acres::integer) as acres,
sum((main.acres::integer)/100000) as acres_scale,
lookup.landcover
FROM new.zonal_test as main
join spatial.states on left(main.atlas_stco,2)=states.atlas_st
join new.lookup using(label)
GROUP BY
states.atlas_name,
lookup.landcover)")
df <- ddply(df, .(atlas_name),transform, pos = cumsum(acres) - (0.5 * acres))
# ggplot(df, aes(fill=landcover, y=acres, x=atlas_name)) +
# ggplot(df, aes(fill=landcover, y=acres, x=reorder(atlas_name, -acres))) +
ggplot(df, aes(fill=factor(landcover, levels=c("other","disturbed","wetland","shrubland","forest","grassland")), y=acres, x=reorder(atlas_name, -acres))) +
geom_bar(stat="identity")+
scale_fill_manual(values = c("forest" = "#256e36", "shrubland" = "#9c140a", "wetland" = "#023c9f", "grassland" = "#a9d91a", "disturbed" = "black", "other"="purple")) +
geom_text(aes(label = acres_scale), position = position_stack(vjust = 0.5))+
# geom_text(aes(label=ifelse(percent >= 0.07, paste0(sprintf("%.0f", percent*100),"%"),"")),position=position_stack(vjust=0.5), colour="white") +
scale_y_continuous(
labels=formatAC,
"millions of acres",
sec.axis = sec_axis(~ . * 1.20, name = "", labels=formatAC)
)
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(scales)
library(rjson)
# library(jsonlite)
require(RColorBrewer)
library(glue)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "glbrc",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
formatAC<-function(x){x/100000}
##### query the data from postgreSQL
df <- dbGetQuery(con, "SELECT states.atlas_name,
sum(main.acres::integer) as acres,
sum((main.acres::integer)/100000) as acres_scale,
lookup.landcover
FROM new.zonal_test as main
join spatial.states on left(main.atlas_stco,2)=states.atlas_st
join new.lookup using(label)
GROUP BY
states.atlas_name,
lookup.landcover)"
)
df <- ddply(df, .(atlas_name),transform, pos = cumsum(acres) - (0.5 * acres))
# ggplot(df, aes(fill=landcover, y=acres, x=atlas_name)) +
# ggplot(df, aes(fill=landcover, y=acres, x=reorder(atlas_name, -acres))) +
ggplot(df, aes(fill=factor(landcover, levels=c("other","disturbed","wetland","shrubland","forest","grassland")), y=acres, x=reorder(atlas_name, -acres))) +
geom_bar(stat="identity")+
scale_fill_manual(values = c("forest" = "#256e36", "shrubland" = "#9c140a", "wetland" = "#023c9f", "grassland" = "#a9d91a", "disturbed" = "black", "other"="purple")) +
geom_text(aes(label = acres_scale), position = position_stack(vjust = 0.5))+
# geom_text(aes(label=ifelse(percent >= 0.07, paste0(sprintf("%.0f", percent*100),"%"),"")),position=position_stack(vjust=0.5), colour="white") +
scale_y_continuous(
labels=formatAC,
"millions of acres",
sec.axis = sec_axis(~ . * 1.20, name = "", labels=formatAC)
)
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(scales)
library(rjson)
# library(jsonlite)
require(RColorBrewer)
library(glue)
drv <- dbDriver("PostgreSQL")
# con <- dbConnect(drv, dbname = "glbrc",
#                  host = "144.92.235.105", port = 5432,
#                  user = "mbougie", password = "Mend0ta!")
formatAC<-function(x){x/100000}
##### query the data from postgreSQL
df <- dbGetQuery(con,"SELECT states.atlas_name,
sum(main.acres::integer) as acres,
sum((main.acres::integer)/100000) as acres_scale,
lookup.landcover
FROM new.zonal_test as main
join spatial.states on left(main.atlas_stco,2)=states.atlas_st
join new.lookup using(label)
GROUP BY
states.atlas_name,
lookup.landcover)"
)
df <- ddply(df, .(atlas_name),transform, pos = cumsum(acres) - (0.5 * acres))
# ggplot(df, aes(fill=landcover, y=acres, x=atlas_name)) +
# ggplot(df, aes(fill=landcover, y=acres, x=reorder(atlas_name, -acres))) +
ggplot(df, aes(fill=factor(landcover, levels=c("other","disturbed","wetland","shrubland","forest","grassland")), y=acres, x=reorder(atlas_name, -acres))) +
geom_bar(stat="identity")+
scale_fill_manual(values = c("forest" = "#256e36", "shrubland" = "#9c140a", "wetland" = "#023c9f", "grassland" = "#a9d91a", "disturbed" = "black", "other"="purple")) +
geom_text(aes(label = acres_scale), position = position_stack(vjust = 0.5))+
# geom_text(aes(label=ifelse(percent >= 0.07, paste0(sprintf("%.0f", percent*100),"%"),"")),position=position_stack(vjust=0.5), colour="white") +
scale_y_continuous(
labels=formatAC,
"millions of acres",
sec.axis = sec_axis(~ . * 1.20, name = "", labels=formatAC)
)
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(scales)
library(rjson)
# library(jsonlite)
require(RColorBrewer)
library(glue)
drv <- dbDriver("PostgreSQL")
# con <- dbConnect(drv, dbname = "glbrc",
#                  host = "144.92.235.105", port = 5432,
#                  user = "mbougie", password = "Mend0ta!")
formatAC<-function(x){x/100000}
##### query the data from postgreSQL
df <- dbGetQuery(con,"SELECT states.atlas_name,
sum(main.acres::integer) as acres,
sum((main.acres::integer)/100000) as acres_scale,
lookup.landcover
FROM new.zonal_test as main
join spatial.states on left(main.atlas_stco,2)=states.atlas_st
join new.lookup using(label)
GROUP BY
states.atlas_name,
lookup.landcover")
df <- ddply(df, .(atlas_name),transform, pos = cumsum(acres) - (0.5 * acres))
# ggplot(df, aes(fill=landcover, y=acres, x=atlas_name)) +
# ggplot(df, aes(fill=landcover, y=acres, x=reorder(atlas_name, -acres))) +
ggplot(df, aes(fill=factor(landcover, levels=c("other","disturbed","wetland","shrubland","forest","grassland")), y=acres, x=reorder(atlas_name, -acres))) +
geom_bar(stat="identity")+
scale_fill_manual(values = c("forest" = "#256e36", "shrubland" = "#9c140a", "wetland" = "#023c9f", "grassland" = "#a9d91a", "disturbed" = "black", "other"="purple")) +
geom_text(aes(label = acres_scale), position = position_stack(vjust = 0.5))+
# geom_text(aes(label=ifelse(percent >= 0.07, paste0(sprintf("%.0f", percent*100),"%"),"")),position=position_stack(vjust=0.5), colour="white") +
scale_y_continuous(
labels=formatAC,
"millions of acres",
sec.axis = sec_axis(~ . * 1.20, name = "", labels=formatAC)
)
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "glbrc",
host = "144.92.235.105", port = 5432,
user = "mbougie", password = "Mend0ta!")
##########################  using supplied county dataset######################################
state <- map_data("state")
##subset state dataset
state_ss <- subset(state, region=='montana' | region=='wyoming' | region == 'north dakota'| region=='south dakota' | region == 'minnesota' | region=='iowa' | region == 'nebraska')
##create counties dataset
cnty <- map_data("county")
##get the fips code
data(county.fips)
## attach fips code to counties dataset
cnty2 <- cnty %>%
mutate(polyname = paste(region,subregion,sep=",")) %>%
left_join(county.fips, by="polyname")
postgres_query <- dbGetQuery(con, "SELECT
main.atlas_stco,
counties.atlas_name,
sum(main.acres),
counties.acres_calc,
(sum(main.acres)/counties.acres_calc)*100 as percent
FROM
spatial.counties,
new.zonal_test as main
WHERE
main.atlas_stco = counties.atlas_stco
GROUP BY
main.atlas_stco,
counties.atlas_name,
counties.acres_calc")
## merge cnty2 with postgres_query
x = merge(cnty2, postgres_query, sort = TRUE, by.x='fips', by.y='atlas_stco')
## If I don't reorder the order of lat long it "tears" the polygons!
cnty_fnl<-x[order(x$order),]
d = ggplot() +
geom_polygon(data=cnty_fnl, aes(y=lat, x=long, group=group, fill = percent), colour = 'grey50', size = 0.25) +
scale_fill_continuous(name="percent", trans = "reverse") +
geom_polygon(data=state_ss, aes(y=lat, x=long, group=group), fill = 'grey70', alpha=0, colour = 'white', size = 0.9)+
coord_map(project="polyconic") +
labs(
title = "Percent Potential Abandoned Land by County",
subtitle = "For cumulative year 2015"
) +
theme(
text = element_text(color = "#22211d"),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.text.y = element_blank(),
axis.title.y=element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 15, hjust=0.00, color = "#4e4d47", margin = margin(b = -0.1, t = 0.1, l = 0.01, unit = "cm")),
plot.subtitle = element_text(size= 10, hjust=0.00, color = "#4e4d47", margin = margin(b = -0.2, t = 0.20, l = 0.01, unit = "cm")),
legend.position = c(0.08, 0.05)
)
d + guides(fill = guide_colorbar(reverse = TRUE, barwidth = 7, barheight = 0.5, title.position = 'top')) + theme(legend.direction = "horizontal")
library(ggplot2)
library(maps)
library(rgdal)# R wrapper around GDAL/OGR
library(sp)
require("RPostgreSQL")
library(plyr)
library(dplyr)
library(viridis)
library(scales)
library(rjson)
# library(jsonlite)
require(RColorBrewer)
library(glue)
drv <- dbDriver("PostgreSQL")
# con <- dbConnect(drv, dbname = "glbrc",
#                  host = "144.92.235.105", port = 5432,
#                  user = "mbougie", password = "Mend0ta!")
formatAC<-function(x){x/100000}
##### query the data from postgreSQL
df <- dbGetQuery(con,"SELECT states.atlas_name,
sum(main.acres::integer) as acres,
sum((main.acres::integer)/100000) as acres_scale,
lookup.landcover
FROM new.zonal_test as main
join spatial.states on left(main.atlas_stco,2)=states.atlas_st
join new.lookup using(label)
GROUP BY
states.atlas_name,
lookup.landcover")
df <- ddply(df, .(atlas_name),transform, pos = cumsum(acres) - (0.5 * acres))
# ggplot(df, aes(fill=landcover, y=acres, x=atlas_name)) +
# ggplot(df, aes(fill=landcover, y=acres, x=reorder(atlas_name, -acres))) +
ggplot(df, aes(fill=factor(landcover, levels=c("other","disturbed","wetland","shrubland","forest","grassland")), y=acres, x=reorder(atlas_name, -acres))) +
geom_bar(stat="identity")+
scale_fill_manual(values = c("forest" = "#256e36", "shrubland" = "#9c140a", "wetland" = "#023c9f", "grassland" = "#a9d91a", "disturbed" = "black", "other"="purple")) +
geom_text(aes(label = acres_scale), position = position_stack(vjust = 0.5))+
# geom_text(aes(label=ifelse(percent >= 0.07, paste0(sprintf("%.0f", percent*100),"%"),"")),position=position_stack(vjust=0.5), colour="white") +
scale_y_continuous(
labels=formatAC,
"millions of acres",
sec.axis = sec_axis(~ . * 1.20, name = "", labels=formatAC)
)
